/*----------------------------------------------------------------------------*\
    DEFAULTS
    Blocss' default variables. Redefine and override them in your
    application-level `_vars.scss` file.
\*----------------------------------------------------------------------------*/
/*----------------------------------------------------------------------------*\
    $CONTENTS
\*----------------------------------------------------------------------------*/
/**
 * TYPOGRAPHY                   Defines the typographic baseline
 * SPACING                      Spacing units to properly size your UI
 * RESPONSIVE                   Define your breakpoints
 * MISC
 */
/*----------------------------------------------------------------------------*\
    $TYPOGRAPHY
    Defines the typographic baseline.
    We define every size in pixels, the underlying system converts the
    respective units to the responsive REM value.
\*----------------------------------------------------------------------------*/
/**
 * Base font size & line height
 * We predefine a nice big font size, wich reads very nice on a big screen.
 * As per: http://uxdesign.smashingmagazine.com/2011/11/29/the-perfect-paragraph/
 */
/**
 * Sizes (in pixels)
 */
/**
 * Base font family
 */
/*----------------------------------------------------------------------------*\
    $SPACING
    Spacing units to properly size your UI
    As per: http://csswizardry.com/2011/12/measuring-and-sizing-uis-2011-style
\*----------------------------------------------------------------------------*/
/**
 * Enable vertical rhythm?
 *
 * Enabling this will ensure all margins, paddings, lineheights etc. will
 * follow the default line height.
 *
 * Disabling this will render all line-heights according
 * to the `$line-height-ratio` variable
 */
/**
 * Assign our `$base-line-height` to a new spacing var for
 * more transparency
 */
/*----------------------------------------------------------------------------*\
    $RESPONSIVE
    Define your breakpoints. The first value is the appendix that shall be used
    for your classes (e.g. `.unit-6-12--palm`), the second value is the media
    query that the breakpoint fires at.
\*----------------------------------------------------------------------------*/
/*----------------------------------------------------------------------------*\
    $MISC
\*----------------------------------------------------------------------------*/
/**
 * Would you like to show a baseline grid? This is handy during development.
 */
/**
 * Would you like to show media queries? This is handy during development.
 */
/**
 * Legacy support
 */
/**
 * Enable debug mode to highlight possible markup/accessibility
 * quirks in your code
 */
/*!*
 * Powered by Blocss v5.0.6 | MIT License | blocss.github.io/blocss
 * by @bramsmulders (Bram Smulders)
 */
/*----------------------------------------------------------------------------*\
    DEFAULTS
    Blocss' default variables. Redefine and override them in your
    application-level `_vars.scss` file.
\*----------------------------------------------------------------------------*/
/*----------------------------------------------------------------------------*\
    $CONTENTS
\*----------------------------------------------------------------------------*/
/**
 * TYPOGRAPHY                   Defines the typographic baseline
 * SPACING                      Spacing units to properly size your UI
 * RESPONSIVE                   Define your breakpoints
 * MISC
 */
/*----------------------------------------------------------------------------*\
    $TYPOGRAPHY
    Defines the typographic baseline.
    We define every size in pixels, the underlying system converts the
    respective units to the responsive REM value.
\*----------------------------------------------------------------------------*/
/**
 * Base font size & line height
 * We predefine a nice big font size, wich reads very nice on a big screen.
 * As per: http://uxdesign.smashingmagazine.com/2011/11/29/the-perfect-paragraph/
 */
/**
 * Sizes (in pixels)
 */
/**
 * Base font family
 */
/*----------------------------------------------------------------------------*\
    $SPACING
    Spacing units to properly size your UI
    As per: http://csswizardry.com/2011/12/measuring-and-sizing-uis-2011-style
\*----------------------------------------------------------------------------*/
/**
 * Enable vertical rhythm?
 *
 * Enabling this will ensure all margins, paddings, lineheights etc. will
 * follow the default line height.
 *
 * Disabling this will render all line-heights according
 * to the `$line-height-ratio` variable
 */
/**
 * Assign our `$base-line-height` to a new spacing var for
 * more transparency
 */
/*----------------------------------------------------------------------------*\
    $RESPONSIVE
    Define your breakpoints. The first value is the appendix that shall be used
    for your classes (e.g. `.unit-6-12--palm`), the second value is the media
    query that the breakpoint fires at.
\*----------------------------------------------------------------------------*/
/*----------------------------------------------------------------------------*\
    $MISC
\*----------------------------------------------------------------------------*/
/**
 * Would you like to show a baseline grid? This is handy during development.
 */
/**
 * Would you like to show media queries? This is handy during development.
 */
/**
 * Legacy support
 */
/**
 * Enable debug mode to highlight possible markup/accessibility
 * quirks in your code
 */
/*----------------------------------------------------------------------------*\
    $MIXINS
    A set of usefull Sass mixins, wich can be used troughout you project
\*----------------------------------------------------------------------------*/
/*  Functions
\*----------------------------------------------------------------------------*/
/**
 * Value to rem
 */
/**
 * Value to em
 */
/**
 * A small, internally-used function to remove the units from a given value.
 */
/*  CSS3
\*----------------------------------------------------------------------------*/
/**
 * Prefixer
 * Example: @include prefixer(border-radius, 5px 10px, webkit moz o ms spec);
 */
/**
 * Rem converter
 *
 * 1. Provide pixel fallback for ie8
 * 2. Loop over values
 * 3. Run trough prefixer
 *
 * Sample: @include rem(margin, 0 auto 300px, webkit moz spec, !important);
 */
/**
 * Multi rem converter
 * Remmify multiple properties in one swoop
 *
 * Beware: if only one set is provided, the mixin will fail.
 * In that case use the normal rem mixin instead
 *
 * Sample:
   @include multi-rem(
       (padding, $space 1em)
       (margin, $space auto, true)
       (border-radius, 50%)
   );
 */
/*  Typography & vertical rhythm
\*----------------------------------------------------------------------------*/
/**
 * Font face shorthand
 */
/**
 * Calculates font, rem font size & line height
 * $multiplier: multiplies line height by the given value
 * $line-height: include line height or not
 * The line height parameter can also be used as the multiplier
 *
 * Sample usage @include font-size(18px, 2);
 */
/**
 * Truncate overly long strings
 * sample value truncate(100%)
 */
/*  Media Queries
\*----------------------------------------------------------------------------*/
/**
 * Enclose a block of code with a media query as named in `$breakpoints`.
 */
/* normalize.css v3.0.0 | MIT License | git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined in IE 8/9.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9.
 * Hide the `template` element in IE, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background: transparent; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9, Safari 5, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari 5, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari 5 and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari 5, and Chrome.
 */
h1, .h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9.
 */
img {
  border: 0; }

/**
 * Correct overflow displayed oddly in IE 9.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari 5.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  -moz-box-sizing: content-box;
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari 5, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8+, and Opera
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari 5 and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari 5 and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  -moz-box-sizing: content-box;
  -webkit-box-sizing: content-box;
  /* 2 */
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

/*----------------------------------------------------------------------------*\
    $BASE
    A thin layer on top of normalize.css that provides a starting point more
    suitable for web applications. Removes the default spacing and border for
    appropriate elements.
\*----------------------------------------------------------------------------*/
/**
 * Toplevel HTML element
 * Assign our `$base-font-size` & predefine some defaults
 *
 * 1. Apply the `$base-font-size`, `$line-height-ratio` & `$face-base`
 * 2. Always add the horizontal scrollbar to prevent layout shifting
 */
html {
  font: 1em/1.5 sans-serif;
  /* 1 */
  overflow-y: scroll;
  /* 2 */
  min-height: 100%; }

/**
 * Border box ALL the things
 * As Per: http://www.paulirish.com/2012/box-sizing-border-box-ftw/
 */
*, *:before, *:after {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box; }

/**
 * The usual resetting of margins, paddings, borders etc.
 */
blockquote,
dl,
dd,
ol,
ul,
h1,
.h1,
h2,
.h2,
h3,
.h3,
h4,
.h4,
h5,
.h5,
h6,
.h6,
p,
pre,
fieldset,
hr {
  margin: 0; }

fieldset,
ol,
ul {
  padding: 0; }

iframe,
fieldset {
  border: 0; }

/**
 * Remove extra vertical spacing when nesting lists.
 */
li > ul,
li > ol {
  margin-bottom: 0; }

/**
 * 1. Fix an odd quirk whereby, without this, code blocks are rendered at a
 *    font-size smaller than 1em.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  /* 1 */ }

/**
 * Suppress the focus outline on links that cannot be accessed via keyboard.
 * This prevents an unwanted focus outline from appearing around elements that
 * might still respond to pointer events.
 */
[tabindex="-1"]:focus {
  outline: none !important; }

/**
 * Image
 *
 * 1. By default all images are fluid
 * 2. Render `alt` visually offset when images don't load
 */
img {
  max-width: 100%;
  /* 1 */
  font-style: italic;
  /* 2 */ }

/**
 * Non-fluid images if you specify `width` and/or `height` attributes.
 */
img[width],
img[height] {
  max-width: none; }

/*----------------------------------------------------------------------------*\
    $SHARED
    Shared behaviour
\*----------------------------------------------------------------------------*/
/**
 * Applies vertical rhythm to designated elements
 * As per: http://csswizardry.com/2012/06/single-direction-margin-declarations
 */
hgroup,
.hgroup,
ul,
ol,
dl,
blockquote,
p,
address,
table,
fieldset,
pre,
hr {
  /* 1 */
  /* 3 */
  margin-bottom: 24px ;
  /* 2 */
  /* 3 */
  margin-bottom: 1.5rem ; }

/**
 * Default indentation value for lists
 */
ul,
ol,
dd {
  /* 1 */
  /* 3 */
  margin-left: 24px ;
  /* 2 */
  /* 3 */
  margin-left: 1.5rem ; }

/**
 * Micro clearfix
 * As per: nicolasgallagher.com/micro-clearfix-hack
 */
.cf:after {
  content: "";
  display: table;
  clear: both; }

/*----------------------------------------------------------------------------*\
    $TYPOGRAPHY
    Pragmatic & practical font sizing
    As per: http://csswizardry.com/2012/02/pragmatic-practical-font-sizing-in-css/
\*----------------------------------------------------------------------------*/
/*  Sizes
    Apply various font sizes by class
\*----------------------------------------------------------------------------*/
.giga {
  /* 1 */
  /* 3 */
  font-size: 96px ;
  /* 2 */
  /* 3 */
  font-size: 6rem ;
  line-height: 1; }

.mega {
  /* 1 */
  /* 3 */
  font-size: 72px ;
  /* 2 */
  /* 3 */
  font-size: 4.5rem ;
  line-height: 1; }

.kilo {
  /* 1 */
  /* 3 */
  font-size: 48px ;
  /* 2 */
  /* 3 */
  font-size: 3rem ;
  line-height: 1; }

.alpha, h1, .h1 {
  /* 1 */
  /* 3 */
  font-size: 36px ;
  /* 2 */
  /* 3 */
  font-size: 2.25rem ;
  line-height: 1.33333333; }

.beta, h2, .h2 {
  /* 1 */
  /* 3 */
  font-size: 32px ;
  /* 2 */
  /* 3 */
  font-size: 2rem ;
  line-height: 1.5; }

.gamma, h3, .h3 {
  /* 1 */
  /* 3 */
  font-size: 28px ;
  /* 2 */
  /* 3 */
  font-size: 1.75rem ;
  line-height: 1.71428571; }

.delta, h4, .h4 {
  /* 1 */
  /* 3 */
  font-size: 24px ;
  /* 2 */
  /* 3 */
  font-size: 1.5rem ;
  line-height: 1; }

.epsilon, h5, .h5 {
  /* 1 */
  /* 3 */
  font-size: 20px ;
  /* 2 */
  /* 3 */
  font-size: 1.25rem ;
  line-height: 1.2; }

.zeta, h6, .h6 {
  /* 1 */
  /* 3 */
  font-size: 18px ;
  /* 2 */
  /* 3 */
  font-size: 1.125rem ;
  line-height: 1.33333333; }

.normalis {
  /* 1 */
  /* 3 */
  font-size: 16px ;
  /* 2 */
  /* 3 */
  font-size: 1rem ;
  line-height: 1.5; }

.milli {
  /* 1 */
  /* 3 */
  font-size: 14px ;
  /* 2 */
  /* 3 */
  font-size: 0.875rem ;
  line-height: 1.71428571; }

.micro {
  /* 1 */
  /* 3 */
  font-size: 12px ;
  /* 2 */
  /* 3 */
  font-size: 0.75rem ;
  line-height: 2; }

/*  Headings
\*----------------------------------------------------------------------------*/
h1, .h1,
h2,
.h2,
h3,
.h3,
h4,
.h4,
h5,
.h5,
h6,
.h6 {
  font-weight: bold; }

/**
 * Double stranded heading hierarchy
 */
/**
 * Heading groups and generic any-heading class.
 * To target any heading of any level simply apply a class of `.hN`
 * Sample markup:
<div class="hgroup">
    <h1 class="hN"></h1>
    <h2 class="hN"></h2>
</hgroup>
 */
hgroup .hN,
.hgroup .hN {
  margin-bottom: 0; }

/*----------------------------------------------------------------------------*\
    $MODULE
    Removes the `margin-bottom` of a modules last-childs
    As per: http://css-tricks.com/spacing-the-bottom-of-modules/
\*----------------------------------------------------------------------------*/
.module > *:last-child,
.module > *:last-child > *:last-child,
.module > *:last-child > *:last-child > *:last-child,
.module > *:last-child > *:last-child > *:last-child > *:last-child {
  margin-bottom: 0; }

/*! blocss-dimensions v1.0.1 | MIT License | github.com/Blocss */
/*----------------------------------------------------------------------------*\
    $DIMENSIONS
    Sizes in human readable format. These are used in conjunction with other
    objects and abstractions found in blocss, most commonly the grid system
    and the arrange module.
\*----------------------------------------------------------------------------*/
/*  Variables
\*----------------------------------------------------------------------------*/
/**
 * Flags to enable or disable dimension traits
 */
/**
 * Divisions, makes it easy to create several proportional
 * dimensions (e.g., both a 2-part and a 12-part grid).
 *
 * For example, `2 4 6 12` will let you use the unit-1-2, unit-2-4,
 * unit-3-6, and unit-6-12 classes to specify that an element should
 * take up 50% of its container.
 */
/**
 * Define which namespaced breakpoints you would like to generate for each
 * of the dimensions. This is handy if you only need push on, say,
 * desk, or you only need a new unit breakpoint at mobile sizes. It allows
 * you to only compile as much CSS as you need. All are empty by
 * default, but you can add breakpoints at will.
 *
 * $breakpoint-has-x:       ('palm', 'desk');
 *
 * Note: the name of the breakpoint must exist in the list of `$breakpoints`
 *       in the Blocss base repository
 */
/**
 * You can rename the dimension prefixes to your liking
 */
/*  Mixins & functions
\*----------------------------------------------------------------------------*/
/**
 * Find the greatest common factor of two integers
 */
/**
 * Check if a list contains a value
 */
/**
 * Fluid units
 * USAGE: provide a space-separated list of integers, each of which
 * represents the number of parts that make up a unit component.
 * Optionally provide a modifier suffix that can be used to adjust
 * grids in different contexts (e.g. viewport dimensions).
 */
/*  Dimensions core
\*----------------------------------------------------------------------------*/
/**
 * Setup generic widths
 */
/**
 * Proportional units
 * Specify the proportional width of an object.
 * Primarily for, but not limited to, use with `.grid__cell` components.
 * Intentional redundancy build into each set of unit classes.
 */
/* Avoid creating rules like '.unit-12-12 {}'' */
/* Initialize variables */
/* Find the greatest common factor */
/**
 * Check if the reduced value of $n was also supplied in the
 * list of units to be built
 */
/**
 * Create units based on fractions
 */
.u-1-12 {
  /**
   * If this unit can be reduced then extend the previous rule
   */
  width: 8.33333333%; }

/* Initialize variables */
/* Find the greatest common factor */
/* Reduced value of $i */
/* Reduced value of $n */
/**
 * Check if the reduced value of $n was also supplied in the
 * list of units to be built
 */
/**
 * Create units based on fractions
 */
.u-2-12 {
  /**
   * If this unit can be reduced then extend the previous rule
   */
  width: 16.66666667%; }

/* Initialize variables */
/* Find the greatest common factor */
/* Reduced value of $i */
/* Reduced value of $n */
/**
 * Check if the reduced value of $n was also supplied in the
 * list of units to be built
 */
/**
 * Create units based on fractions
 */
.u-3-12 {
  /**
   * If this unit can be reduced then extend the previous rule
   */
  width: 25%; }

/* Initialize variables */
/* Find the greatest common factor */
/* Reduced value of $i */
/* Reduced value of $n */
/**
 * Check if the reduced value of $n was also supplied in the
 * list of units to be built
 */
/**
 * Create units based on fractions
 */
.u-4-12 {
  /**
   * If this unit can be reduced then extend the previous rule
   */
  width: 33.33333333%; }

/* Initialize variables */
/* Find the greatest common factor */
/**
 * Check if the reduced value of $n was also supplied in the
 * list of units to be built
 */
/**
 * Create units based on fractions
 */
.u-5-12 {
  /**
   * If this unit can be reduced then extend the previous rule
   */
  width: 41.66666667%; }

/* Initialize variables */
/* Find the greatest common factor */
/* Reduced value of $i */
/* Reduced value of $n */
/**
 * Check if the reduced value of $n was also supplied in the
 * list of units to be built
 */
/**
 * Create units based on fractions
 */
.u-6-12 {
  /**
   * If this unit can be reduced then extend the previous rule
   */
  width: 50%; }

/* Initialize variables */
/* Find the greatest common factor */
/**
 * Check if the reduced value of $n was also supplied in the
 * list of units to be built
 */
/**
 * Create units based on fractions
 */
.u-7-12 {
  /**
   * If this unit can be reduced then extend the previous rule
   */
  width: 58.33333333%; }

/* Initialize variables */
/* Find the greatest common factor */
/* Reduced value of $i */
/* Reduced value of $n */
/**
 * Check if the reduced value of $n was also supplied in the
 * list of units to be built
 */
/**
 * Create units based on fractions
 */
.u-8-12 {
  /**
   * If this unit can be reduced then extend the previous rule
   */
  width: 66.66666667%; }

/* Initialize variables */
/* Find the greatest common factor */
/* Reduced value of $i */
/* Reduced value of $n */
/**
 * Check if the reduced value of $n was also supplied in the
 * list of units to be built
 */
/**
 * Create units based on fractions
 */
.u-9-12 {
  /**
   * If this unit can be reduced then extend the previous rule
   */
  width: 75%; }

/* Initialize variables */
/* Find the greatest common factor */
/* Reduced value of $i */
/* Reduced value of $n */
/**
 * Check if the reduced value of $n was also supplied in the
 * list of units to be built
 */
/**
 * Create units based on fractions
 */
.u-10-12 {
  /**
   * If this unit can be reduced then extend the previous rule
   */
  width: 83.33333333%; }

/* Initialize variables */
/* Find the greatest common factor */
/**
 * Check if the reduced value of $n was also supplied in the
 * list of units to be built
 */
/**
 * Create units based on fractions
 */
.u-11-12 {
  /**
   * If this unit can be reduced then extend the previous rule
   */
  width: 91.66666667%; }

/**
 * Reset dimensions
 */
.u-1-1 {
  width: 100%; }

.u-auto {
  width: auto; }

/**
  * Setup generic push
  */
[class*="push-"] {
  position: relative; }

/**
 * Proportional units
 * Specify the proportional width of an object.
 * Primarily for, but not limited to, use with `.grid__cell` components.
 * Intentional redundancy build into each set of unit classes.
 */
/* Avoid creating rules like '.unit-12-12 {}'' */
/* Initialize variables */
/* Find the greatest common factor */
/**
 * Check if the reduced value of $n was also supplied in the
 * list of units to be built
 */
/**
 * Create units based on fractions
 */
.push-1-12 {
  /**
   * If this unit can be reduced then extend the previous rule
   */
  left: 8.33333333%; }

/* Initialize variables */
/* Find the greatest common factor */
/* Reduced value of $i */
/* Reduced value of $n */
/**
 * Check if the reduced value of $n was also supplied in the
 * list of units to be built
 */
/**
 * Create units based on fractions
 */
.push-2-12 {
  /**
   * If this unit can be reduced then extend the previous rule
   */
  left: 16.66666667%; }

/* Initialize variables */
/* Find the greatest common factor */
/* Reduced value of $i */
/* Reduced value of $n */
/**
 * Check if the reduced value of $n was also supplied in the
 * list of units to be built
 */
/**
 * Create units based on fractions
 */
.push-3-12 {
  /**
   * If this unit can be reduced then extend the previous rule
   */
  left: 25%; }

/* Initialize variables */
/* Find the greatest common factor */
/* Reduced value of $i */
/* Reduced value of $n */
/**
 * Check if the reduced value of $n was also supplied in the
 * list of units to be built
 */
/**
 * Create units based on fractions
 */
.push-4-12 {
  /**
   * If this unit can be reduced then extend the previous rule
   */
  left: 33.33333333%; }

/* Initialize variables */
/* Find the greatest common factor */
/**
 * Check if the reduced value of $n was also supplied in the
 * list of units to be built
 */
/**
 * Create units based on fractions
 */
.push-5-12 {
  /**
   * If this unit can be reduced then extend the previous rule
   */
  left: 41.66666667%; }

/* Initialize variables */
/* Find the greatest common factor */
/* Reduced value of $i */
/* Reduced value of $n */
/**
 * Check if the reduced value of $n was also supplied in the
 * list of units to be built
 */
/**
 * Create units based on fractions
 */
.push-6-12 {
  /**
   * If this unit can be reduced then extend the previous rule
   */
  left: 50%; }

/* Initialize variables */
/* Find the greatest common factor */
/**
 * Check if the reduced value of $n was also supplied in the
 * list of units to be built
 */
/**
 * Create units based on fractions
 */
.push-7-12 {
  /**
   * If this unit can be reduced then extend the previous rule
   */
  left: 58.33333333%; }

/* Initialize variables */
/* Find the greatest common factor */
/* Reduced value of $i */
/* Reduced value of $n */
/**
 * Check if the reduced value of $n was also supplied in the
 * list of units to be built
 */
/**
 * Create units based on fractions
 */
.push-8-12 {
  /**
   * If this unit can be reduced then extend the previous rule
   */
  left: 66.66666667%; }

/* Initialize variables */
/* Find the greatest common factor */
/* Reduced value of $i */
/* Reduced value of $n */
/**
 * Check if the reduced value of $n was also supplied in the
 * list of units to be built
 */
/**
 * Create units based on fractions
 */
.push-9-12 {
  /**
   * If this unit can be reduced then extend the previous rule
   */
  left: 75%; }

/* Initialize variables */
/* Find the greatest common factor */
/* Reduced value of $i */
/* Reduced value of $n */
/**
 * Check if the reduced value of $n was also supplied in the
 * list of units to be built
 */
/**
 * Create units based on fractions
 */
.push-10-12 {
  /**
   * If this unit can be reduced then extend the previous rule
   */
  left: 83.33333333%; }

/* Initialize variables */
/* Find the greatest common factor */
/**
 * Check if the reduced value of $n was also supplied in the
 * list of units to be built
 */
/**
 * Create units based on fractions
 */
.push-11-12 {
  /**
   * If this unit can be reduced then extend the previous rule
   */
  left: 91.66666667%; }

/**
 * Reset dimensions
 */
.push-0-0 {
  left: 0; }

/**
  * Setup generic pull
  */
[class*="pull-"] {
  position: relative; }

/**
 * Proportional units
 * Specify the proportional width of an object.
 * Primarily for, but not limited to, use with `.grid__cell` components.
 * Intentional redundancy build into each set of unit classes.
 */
/* Avoid creating rules like '.unit-12-12 {}'' */
/* Initialize variables */
/* Find the greatest common factor */
/**
 * Check if the reduced value of $n was also supplied in the
 * list of units to be built
 */
/**
 * Create units based on fractions
 */
.pull-1-12 {
  /**
   * If this unit can be reduced then extend the previous rule
   */
  right: 8.33333333%; }

/* Initialize variables */
/* Find the greatest common factor */
/* Reduced value of $i */
/* Reduced value of $n */
/**
 * Check if the reduced value of $n was also supplied in the
 * list of units to be built
 */
/**
 * Create units based on fractions
 */
.pull-2-12 {
  /**
   * If this unit can be reduced then extend the previous rule
   */
  right: 16.66666667%; }

/* Initialize variables */
/* Find the greatest common factor */
/* Reduced value of $i */
/* Reduced value of $n */
/**
 * Check if the reduced value of $n was also supplied in the
 * list of units to be built
 */
/**
 * Create units based on fractions
 */
.pull-3-12 {
  /**
   * If this unit can be reduced then extend the previous rule
   */
  right: 25%; }

/* Initialize variables */
/* Find the greatest common factor */
/* Reduced value of $i */
/* Reduced value of $n */
/**
 * Check if the reduced value of $n was also supplied in the
 * list of units to be built
 */
/**
 * Create units based on fractions
 */
.pull-4-12 {
  /**
   * If this unit can be reduced then extend the previous rule
   */
  right: 33.33333333%; }

/* Initialize variables */
/* Find the greatest common factor */
/**
 * Check if the reduced value of $n was also supplied in the
 * list of units to be built
 */
/**
 * Create units based on fractions
 */
.pull-5-12 {
  /**
   * If this unit can be reduced then extend the previous rule
   */
  right: 41.66666667%; }

/* Initialize variables */
/* Find the greatest common factor */
/* Reduced value of $i */
/* Reduced value of $n */
/**
 * Check if the reduced value of $n was also supplied in the
 * list of units to be built
 */
/**
 * Create units based on fractions
 */
.pull-6-12 {
  /**
   * If this unit can be reduced then extend the previous rule
   */
  right: 50%; }

/* Initialize variables */
/* Find the greatest common factor */
/**
 * Check if the reduced value of $n was also supplied in the
 * list of units to be built
 */
/**
 * Create units based on fractions
 */
.pull-7-12 {
  /**
   * If this unit can be reduced then extend the previous rule
   */
  right: 58.33333333%; }

/* Initialize variables */
/* Find the greatest common factor */
/* Reduced value of $i */
/* Reduced value of $n */
/**
 * Check if the reduced value of $n was also supplied in the
 * list of units to be built
 */
/**
 * Create units based on fractions
 */
.pull-8-12 {
  /**
   * If this unit can be reduced then extend the previous rule
   */
  right: 66.66666667%; }

/* Initialize variables */
/* Find the greatest common factor */
/* Reduced value of $i */
/* Reduced value of $n */
/**
 * Check if the reduced value of $n was also supplied in the
 * list of units to be built
 */
/**
 * Create units based on fractions
 */
.pull-9-12 {
  /**
   * If this unit can be reduced then extend the previous rule
   */
  right: 75%; }

/* Initialize variables */
/* Find the greatest common factor */
/* Reduced value of $i */
/* Reduced value of $n */
/**
 * Check if the reduced value of $n was also supplied in the
 * list of units to be built
 */
/**
 * Create units based on fractions
 */
.pull-10-12 {
  /**
   * If this unit can be reduced then extend the previous rule
   */
  right: 83.33333333%; }

/* Initialize variables */
/* Find the greatest common factor */
/**
 * Check if the reduced value of $n was also supplied in the
 * list of units to be built
 */
/**
 * Create units based on fractions
 */
.pull-11-12 {
  /**
   * If this unit can be reduced then extend the previous rule
   */
  right: 91.66666667%; }

/**
 * Reset dimensions
 */
.pull-0-0 {
  right: 0; }

/*  Responsive
\*----------------------------------------------------------------------------*/
/*! blocss-grid v1.0.3 | MIT License | github.com/Blocss */
/*----------------------------------------------------------------------------*\
    $GRID
    Fluid and nestable grid system
\*----------------------------------------------------------------------------*/
/**
 * Example usage:
 *
<div class="grid  [grid--center|grid--right|grid--rev|grid--middle|grid--bottom|grid--narrow|grid--wide|grid--flush]">
    <div class="grid__cell  u-3-12  u-1-1--palm"></div>
    <div class="grid__cell  u-3-12  u-1-1--palm"></div>
    <div class="grid__cell  u-3-12  u-1-1--palm"></div>
    <div class="grid__cell  grid__cell--center  u-3-12  u-1-1--palm"></div>
</div>
 */
/**
 * Dont't modify the following variables
 */
/**
 * Enable/disable modifiers
 */
/*  Grid Core
\*----------------------------------------------------------------------------*/
/**
 * Grid container
 * Must only contain `.grid` or `.grid__cell` components as children.
 *
 * 1. Remove inter-unit whitespace that appears between `inline-block` child
 *    elements.
 * 2. Adjustment for child element margins.
 * 3. Use lists as grid
 * 4. Ensure consistent default alignment
 */
.grid {
  text-rendering: optimizespeed;
  /* 1 */
  font-size: 0;
  /* 1 */
  /* 1 */
  /* 3 */
  margin-left: -24px ;
  /* 2 */
  /* 3 */
  margin-left: -1.5rem ;
  /* 2 */
  padding: 0;
  list-style: none;
  /* 3 */
  text-align: left;
  /* 4 */ }

/**
 * Child `grid` object adjustments
 * Used for more complex fixed-fluid hybrid grids.
 */
.grid > .grid {
  overflow: hidden;
  margin-right: 0;
  margin-left: 0; }

/**
 * Grid cells
 * No explicit width by default. Apply `.unit-x-y` classes.
 *
 * 1. Fundamentals of the non-float grid layout mechanism.
 * 2. Apply grid gutter.
 * 3. Controls vertical positioning of units.
 * 4. Keeps content correctly aligned with the grid direction.
 * 5. Reset text defaults.
 */
.grid__cell {
  /* 1 */
  /* 3 */
  padding-left: 24px ;
  /* 2 */
  /* 3 */
  padding-left: 1.5rem ;
  display: inline-block;
  /* 1 */
  width: 100%;
  margin: 0;
  vertical-align: top;
  /* 3 */
  text-align: left;
  /* 4 */
  /* 1 */
  /* 3 */
  font-size: 16px ;
  /* 2 */
  /* 3 */
  font-size: 1rem ;
  line-height: 1.5;
  /* 5 */ }

/**
 * Modifier: horizontally center one unit
 * Set a specific unit to be horizontally centered. Doesn't affect
 * any other units. Can still contain a child `grid` object.
 */
.grid__cell--center {
  display: block;
  margin: 0 auto; }

/**
 * Modifier: Reverse grid direction
 */
.grid--rev {
  direction: rtl; }
  .grid--rev > .grid__cell {
    direction: ltr; }

/**
 * Modifyer: Grid align right
 */
.grid--right {
  text-align: right; }

/**
 * Modifier: horizontally center all grid units
 * Allows for automatic unit centering irrespective of the number of
 * units in the grid.
 */
.grid--center {
  text-align: center; }
  .grid--center > .grid__cell {
    text-align: left; }

/**
 * Modifier: align grid cells vertically
 */
.grid--middle > .grid__cell {
  vertical-align: middle; }

.grid--bottom > .grid__cell {
  vertical-align: bottom; }

/**
 * Create grids with narrower gutters. Extends `.grid`.
 */
.grid--narrow {
  /* 1 */
  /* 3 */
  margin-left: -12px ;
  /* 2 */
  /* 3 */
  margin-left: -0.75rem ; }
  .grid--narrow > .grid__cell {
    /* 1 */
    /* 3 */
    padding-left: 12px ;
    /* 2 */
    /* 3 */
    padding-left: 0.75rem ; }

/**
 * Create grids with wider gutters. Extends `.grid`.
 */
.grid--wide {
  /* 1 */
  /* 3 */
  margin-left: -48px ;
  /* 2 */
  /* 3 */
  margin-left: -3rem ; }
  .grid--wide > .grid__cell {
    /* 1 */
    /* 3 */
    padding-left: 48px ;
    /* 2 */
    /* 3 */
    padding-left: 3rem ; }

/**
 * Modifier: Remove gutters between columns
 * Tags: ^deprecated
 * `.grid--gutterless` modifier is deprecated and will be removed in v1.1.0
 */
.grid--flush,
.grid--gutterless {
  margin: 0; }
  .grid--flush > .grid__cell,
  .grid--gutterless > .grid__cell {
    padding: 0; }

[ng\:cloak], [ng-cloak], [data-ng-cloak], [x-ng-cloak],
.ng-cloak, .x-ng-cloak,
.ng-hide {
  display: none !important; }

ng\:form {
  display: block; }

.popup {
  width: 200px; }

.grid {
  width: 80%;
  display: inline-block;
  font-size: 0px;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  -o-user-select: none;
  user-select: none; }

.grid__row {
  line-height: 0px;
  font-size: 0px;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  -o-user-select: none;
  user-select: none; }

.grid__head {
  line-height: 30px;
  font-size: 20px; }

.grid__cell {
  text-align: center;
  display: inline-block;
  border: 1px solid black;
  min-height: 20px;
  box-sizing: border-box;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  -o-user-select: none;
  user-select: none; }

.grid__def {
  font-size: 12px; }

.inrange {
  background-color: lightgrey; }

.appointment {
  background-color: red; }

.dragappointment {
  background-color: blue; }

.width-5 {
  width: 16%; }

.width-6 {
  width: 14%; }

.width-7 {
  width: 12%; }

.controls {
  display: inline-block; }

a {
  cursor: pointer; }

/*# sourceMappingURL=style.css.map */
